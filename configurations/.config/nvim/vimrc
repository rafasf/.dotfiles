
"---
" Mappings
"---

"let mapleader = ','

" Toggle paste mode
"nmap <silent> <leader>p :set invpaste<CR>:set paste?<CR>

" cd to the directory containing the file in the buffer
"nmap <silent> <leader>cd :lcd %:h<CR>
"nmap <silent> <leader>md :!mkdir -p %:p:h<CR>

" Turn off that stupid highlight search
"nmap <silent> <leader>n :set invhls<CR>:set hls?<CR>

" Maps to make handling windows a bit easier
"noremap <silent> <leader>h :wincmd h<CR>
"noremap <silent> <leader>j :wincmd j<CR>
"noremap <silent> <leader>k :wincmd k<CR>
"noremap <silent> <leader>l :wincmd l<CR>
"
"" Edit the vimrc file
"nmap <silent> <leader>ev :e $MYVIMRC<CR>
"nmap <silent> <leader>sv :so $MYVIMRC<CR>
"
"" Make horizontal scrolling easier
"nmap <silent> <C-o> 10zl
"nmap <silent> <C-i> 10zh

" Highlight all instances of the current word under the cursor
"nmap <silent> ^ :setl hls<CR>:let @/="<C-r><C-w>"<CR>

" Copy to system clipboard
"nnoremap <leader>y "+y
"vnoremap <leader>y "+y

"---
" netrw
"---

"nmap <silent> <leader>m :Vexplore<CR>
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 25

"---
" Nvim tree
"---
"nmap <silent> <leader>m :NvimTreeToggle<CR>
"set termguicolors

"---
" terminal
"---

"tnoremap <C-[> <C-\><C-n>
"tnoremap <M-h> <c-\><c-n><c-w>h
"tnoremap <M-j> <c-\><c-n><c-w>j
"tnoremap <M-k> <c-\><c-n><c-w>k
"tnoremap <M-l> <c-\><c-n><c-w>l
"
"augroup myterm | au!
"    au TermOpen * if &buftype ==# 'terminal' | resize 20 | vert resize 50 | endif
"augroup end

"---
" Plugins
"---

"call plug#begin('~/.config/nvim/plugged')
"
"Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
"Plug 'junegunn/fzf.vim'
"
"Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
"
"Plug 'neovim/nvim-lspconfig'
"Plug 'hrsh7th/cmp-nvim-lsp'
"Plug 'hrsh7th/cmp-buffer'
"Plug 'hrsh7th/nvim-cmp'
"
"Plug 'hrsh7th/cmp-vsnip'
"Plug 'hrsh7th/vim-vsnip'
"Plug 'hrsh7th/vim-vsnip-integ'
"
"Plug 'fatih/vim-go'
"Plug 'elixir-lang/vim-elixir'
"Plug 'LnL7/vim-nix'
"
"" PlantUML with preview
"Plug 'aklt/plantuml-syntax'
"Plug 'tyru/open-browser.vim'
"Plug 'weirongxu/plantuml-previewer.vim'
"
"Plug 'nvim-lua/plenary.nvim'
"Plug 'jose-elias-alvarez/null-ls.nvim'
"
"Plug 'kyazdani42/nvim-web-devicons'
"Plug 'folke/trouble.nvim'
"
"" Visual
"Plug 'gruvbox-community/gruvbox'
"Plug 'hoob3rt/lualine.nvim'
"Plug 'kyazdani42/nvim-web-devicons'
"Plug 'kyazdani42/nvim-tree.lua'
"
"" Easier reading
"Plug 'Yggdroot/indentLine'
"
"Plug 'mattn/emmet-vim'
"call plug#end()

"---
" Colour scheme
"---

"if exists('+termguicolors')
"  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
"  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
"endif
"
"let g:gruvbox_contrast_dark = 'medium'
"let g:gruvbox_invert_selection = '0'
"
"colorscheme gruvbox
"set background=dark
"hi Normal guibg=NONE ctermbg=NONE

"---
" fzf Settings
"---
"nmap <leader>t :Files<CR>
"nmap <leader>b :Buffers<CR>

"let g:fzf_preview_window = []
"let $FZF_DEFAULT_OPTS='--reverse'
"let g:fzf_layout = { 'down': '30%' }
"
"" hide statusbar
"if has('nvim') && !exists('g:fzf_layout')
"  autocmd! FileType fzf
"  autocmd  FileType fzf set laststatus=0 noshowmode noruler
"    \| autocmd BufLeave <buffer> set laststatus=2 showmode ruler
"endif
"
""---
"" File types
""---
"au BufNewFile,BufRead *.ejs set filetype=html

